{
  "address": "0x2cB568442a102dF518b3D37CBD0d2884523C940B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IAlgebraFactory",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapStart",
          "type": "int16"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapEnd",
          "type": "int16"
        }
      ],
      "name": "getAdditionalBitmapWithTicks",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int16",
              "name": "index",
              "type": "int16"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "internalType": "struct IAlgebraStateMulticall.TickBitMapMappings[]",
          "name": "tickBitmap",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "int24",
              "name": "index",
              "type": "int24"
            },
            {
              "components": [
                {
                  "internalType": "uint128",
                  "name": "liquidityGross",
                  "type": "uint128"
                },
                {
                  "internalType": "int128",
                  "name": "liquidityNet",
                  "type": "int128"
                },
                {
                  "internalType": "int56",
                  "name": "tickCumulativeOutside",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityOutsideX128",
                  "type": "uint160"
                },
                {
                  "internalType": "uint32",
                  "name": "secondsOutside",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.TickInfo",
              "name": "value",
              "type": "tuple"
            }
          ],
          "internalType": "struct IAlgebraStateMulticall.TickInfoMappings[]",
          "name": "ticks",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAlgebraFactory",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapStart",
          "type": "int16"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapEnd",
          "type": "int16"
        }
      ],
      "name": "getAdditionalBitmapWithoutTicks",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int16",
              "name": "index",
              "type": "int16"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "internalType": "struct IAlgebraStateMulticall.TickBitMapMappings[]",
          "name": "tickBitmap",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAlgebraFactory",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapStart",
          "type": "int16"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapEnd",
          "type": "int16"
        }
      ],
      "name": "getFullState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IAlgebraPool",
              "name": "pool",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockTimestamp",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint160",
                  "name": "price",
                  "type": "uint160"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint16",
                  "name": "feeZto",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "feeOtz",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "timepointIndex",
                  "type": "uint16"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFeeToken0",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFeeToken1",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "unlocked",
                  "type": "bool"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.GlobalState",
              "name": "globalState",
              "type": "tuple"
            },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "uint128",
              "name": "maxLiquidityPerTick",
              "type": "uint128"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                },
                {
                  "internalType": "uint32",
                  "name": "blockTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "int56",
                  "name": "tickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityCumulative",
                  "type": "uint160"
                },
                {
                  "internalType": "uint88",
                  "name": "volatilityCumulative",
                  "type": "uint88"
                },
                {
                  "internalType": "int24",
                  "name": "averageTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint144",
                  "name": "volumePerLiquidityCumulative",
                  "type": "uint144"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.Timepoints",
              "name": "timepoints",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "int16",
                  "name": "index",
                  "type": "int16"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.TickBitMapMappings[]",
              "name": "tickBitmap",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "int24",
                  "name": "index",
                  "type": "int24"
                },
                {
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "liquidityGross",
                      "type": "uint128"
                    },
                    {
                      "internalType": "int128",
                      "name": "liquidityNet",
                      "type": "int128"
                    },
                    {
                      "internalType": "int56",
                      "name": "tickCumulativeOutside",
                      "type": "int56"
                    },
                    {
                      "internalType": "uint160",
                      "name": "secondsPerLiquidityOutsideX128",
                      "type": "uint160"
                    },
                    {
                      "internalType": "uint32",
                      "name": "secondsOutside",
                      "type": "uint32"
                    },
                    {
                      "internalType": "bool",
                      "name": "initialized",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IAlgebraStateMulticall.TickInfo",
                  "name": "value",
                  "type": "tuple"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.TickInfoMappings[]",
              "name": "ticks",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct IAlgebraStateMulticall.StateResult",
          "name": "state",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAlgebraFactory",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "int16",
          "name": "leftBitmapAmount",
          "type": "int16"
        },
        {
          "internalType": "int16",
          "name": "rightBitmapAmount",
          "type": "int16"
        }
      ],
      "name": "getFullStateWithRelativeBitmaps",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IAlgebraPool",
              "name": "pool",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockTimestamp",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint160",
                  "name": "price",
                  "type": "uint160"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint16",
                  "name": "feeZto",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "feeOtz",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "timepointIndex",
                  "type": "uint16"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFeeToken0",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFeeToken1",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "unlocked",
                  "type": "bool"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.GlobalState",
              "name": "globalState",
              "type": "tuple"
            },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "uint128",
              "name": "maxLiquidityPerTick",
              "type": "uint128"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                },
                {
                  "internalType": "uint32",
                  "name": "blockTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "int56",
                  "name": "tickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityCumulative",
                  "type": "uint160"
                },
                {
                  "internalType": "uint88",
                  "name": "volatilityCumulative",
                  "type": "uint88"
                },
                {
                  "internalType": "int24",
                  "name": "averageTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint144",
                  "name": "volumePerLiquidityCumulative",
                  "type": "uint144"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.Timepoints",
              "name": "timepoints",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "int16",
                  "name": "index",
                  "type": "int16"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.TickBitMapMappings[]",
              "name": "tickBitmap",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "int24",
                  "name": "index",
                  "type": "int24"
                },
                {
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "liquidityGross",
                      "type": "uint128"
                    },
                    {
                      "internalType": "int128",
                      "name": "liquidityNet",
                      "type": "int128"
                    },
                    {
                      "internalType": "int56",
                      "name": "tickCumulativeOutside",
                      "type": "int56"
                    },
                    {
                      "internalType": "uint160",
                      "name": "secondsPerLiquidityOutsideX128",
                      "type": "uint160"
                    },
                    {
                      "internalType": "uint32",
                      "name": "secondsOutside",
                      "type": "uint32"
                    },
                    {
                      "internalType": "bool",
                      "name": "initialized",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IAlgebraStateMulticall.TickInfo",
                  "name": "value",
                  "type": "tuple"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.TickInfoMappings[]",
              "name": "ticks",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct IAlgebraStateMulticall.StateResult",
          "name": "state",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAlgebraFactory",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapStart",
          "type": "int16"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapEnd",
          "type": "int16"
        }
      ],
      "name": "getFullStateWithoutTicks",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IAlgebraPool",
              "name": "pool",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockTimestamp",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint160",
                  "name": "price",
                  "type": "uint160"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint16",
                  "name": "feeZto",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "feeOtz",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "timepointIndex",
                  "type": "uint16"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFeeToken0",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFeeToken1",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "unlocked",
                  "type": "bool"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.GlobalState",
              "name": "globalState",
              "type": "tuple"
            },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "uint128",
              "name": "maxLiquidityPerTick",
              "type": "uint128"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                },
                {
                  "internalType": "uint32",
                  "name": "blockTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "int56",
                  "name": "tickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityCumulative",
                  "type": "uint160"
                },
                {
                  "internalType": "uint88",
                  "name": "volatilityCumulative",
                  "type": "uint88"
                },
                {
                  "internalType": "int24",
                  "name": "averageTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint144",
                  "name": "volumePerLiquidityCumulative",
                  "type": "uint144"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.Timepoints",
              "name": "timepoints",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "int16",
                  "name": "index",
                  "type": "int16"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.TickBitMapMappings[]",
              "name": "tickBitmap",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "int24",
                  "name": "index",
                  "type": "int24"
                },
                {
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "liquidityGross",
                      "type": "uint128"
                    },
                    {
                      "internalType": "int128",
                      "name": "liquidityNet",
                      "type": "int128"
                    },
                    {
                      "internalType": "int56",
                      "name": "tickCumulativeOutside",
                      "type": "int56"
                    },
                    {
                      "internalType": "uint160",
                      "name": "secondsPerLiquidityOutsideX128",
                      "type": "uint160"
                    },
                    {
                      "internalType": "uint32",
                      "name": "secondsOutside",
                      "type": "uint32"
                    },
                    {
                      "internalType": "bool",
                      "name": "initialized",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IAlgebraStateMulticall.TickInfo",
                  "name": "value",
                  "type": "tuple"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.TickInfoMappings[]",
              "name": "ticks",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct IAlgebraStateMulticall.StateResult",
          "name": "state",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x22eccb188fadd66769c6fbe98e4c26c56f796fbb682717b055b063ff2dda2631",
  "receipt": {
    "to": null,
    "from": "0x35E0C852FcB9534df65D03877c1238f8E59c53FE",
    "contractAddress": "0x2cB568442a102dF518b3D37CBD0d2884523C940B",
    "transactionIndex": 2,
    "gasUsed": "9417508",
    "logsBloom": "0x
    "blockHash": "0x8fdddf110951463261a114850d2bfad1d07d70f8422e0bb27350d7c3ecc03dc1",
    "transactionHash": "0x22eccb188fadd66769c6fbe98e4c26c56f796fbb682717b055b063ff2dda2631",
    "logs": [],
    "blockNumber": 121339911,
    "cumulativeGasUsed": "11657327",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "bytecode": "0x608060405234801561001057600080fd5b5061171e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80636ae935db116100505780636ae935db146100a85780638cad7c9e146100bb578063bc34cce2146100dc57610067565b806306cbe3ba1461006c5780634cb74eb614610095575b600080fd5b61007f61007a366004611055565b6100fc565b60405161008c9190611604565b60405180910390f35b61007f6100a3366004611055565b6101e0565b61007f6100b6366004611055565b610256565b6100ce6100c9366004611055565b6102b5565b60405161008c9291906114de565b6100ef6100ea366004611055565b61031f565b60405161008c91906114cb565b610104610da5565b60008360010b1361014a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014190611596565b60405180910390fd5b60008260010b13610187576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610141906115cd565b61019286868661036e565b905060006101a78260400151602001516107a1565b90506101ba8787878785038786016107af565b60e083018190526101d0908890889088906109fd565b6101008301525095945050505050565b6101e8610da5565b8260010b8260010b1215610228576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101419061155f565b6102358686868686610c78565b90506102478686868460e001516109fd565b61010082015295945050505050565b61025e610da5565b8260010b8260010b121561029e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101419061155f565b6102ab8686868686610c78565b9695505050505050565b6060808360010b8360010b12156102f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101419061155f565b61030587878787876107af565b9150610313878787856109fd565b90509550959350505050565b60608260010b8260010b1215610361576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101419061155f565b6102ab86868686866107af565b610376610da5565b6000610383858585610ca8565b73ffffffffffffffffffffffffffffffffffffffff811680845242602080860191909152604080517f1a68650200000000000000000000000000000000000000000000000000000000815290519394509192631a686502926004808201939291829003018186803b1580156103f757600080fd5b505afa15801561040b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042f91906110d9565b6fffffffffffffffffffffffffffffffff166060830152604080517fd0c93a7c000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff83169163d0c93a7c916004808301926020929190829003018186803b1580156104ac57600080fd5b505afa1580156104c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e491906110bf565b826080019060020b908160020b815250508073ffffffffffffffffffffffffffffffffffffffff166370cf754a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561053b57600080fd5b505afa15801561054f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057391906110d9565b6fffffffffffffffffffffffffffffffff1660a0830152604080517fe76c01e4000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff83169163e76c01e491600480830192610100929190829003018186803b1580156105f157600080fd5b505afa158015610605573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106299190611185565b506040808a01805160ff93841660c08201529390921660a084015261ffff93841660808085019190915294841660608401529490921681850152600294850b90940b602085015273ffffffffffffffffffffffffffffffffffffffff94851690935291519091015190517f74eceae6000000000000000000000000000000000000000000000000000000008152918316916374eceae6916106cc916004016116dd565b60e06040518083038186803b1580156106e457600080fd5b505afa1580156106f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071c9190610fa2565b60c0808a015171ffffffffffffffffffffffffffffffffffff90921690820152600291820b90910b60a08201526affffffffffffffffffffff909116608082015273ffffffffffffffffffffffffffffffffffffffff9091166060820152600691820b90910b604082015263ffffffff90911660208201529015159052509392505050565b600281900b60081d5b919050565b606060006107be878787610ca8565b90506000600185900b5b8460010b8113610894576040517fc677e3e000000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff85169063c677e3e09061082790859060040161150c565b60206040518083038186803b15801561083f57600080fd5b505afa158015610853573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108779190611200565b905080610884575061088c565b506001909101905b6001016107c8565b508067ffffffffffffffff811180156108ac57600080fd5b506040519080825280602002602001820160405280156108e657816020015b6108d3610dfb565b8152602001906001900390816108cb5790505b5092506000600186900b5b8560010b81136109f0576040517fc677e3e0000000000000000000000000000000000000000000000000000000008152819060009073ffffffffffffffffffffffffffffffffffffffff87169063c677e3e09061095290859060040161150c565b60206040518083038186803b15801561096a57600080fd5b505afa15801561097e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a29190611200565b9050806109b05750506109e8565b60405180604001604052808360010b8152602001828152508785815181106109d457fe5b602090810291909101015250506001909101905b6001016108f1565b5050505095945050505050565b60606000610a0c868686610ca8565b90506000805b8451811015610a68576000858281518110610a2957fe5b602002602001015160200151905060005b610100811015610a5e576001811b821615610a56576001909301925b600101610a3a565b5050600101610a12565b508067ffffffffffffffff81118015610a8057600080fd5b50604051908082528060200260200182016040528015610aba57816020015b610aa7610e12565b815260200190600190039081610a9f5790505b5092506000805b8551811015610c6c576000868281518110610ad857fe5b602002602001015160200151905060005b610100811015610c62576001811b821615610c5a5760008160088a8681518110610b0f57fe5b60200260200101516000015160010b60020b901b01905080888681518110610b3357fe5b60200260200101516000019060020b908160020b81525050610b53610e34565b888681518110610b5f57fe5b60200260200101516020015190508773ffffffffffffffffffffffffffffffffffffffff1663f30dba93836040518263ffffffff1660e01b8152600401610ba6919061151a565b6101006040518083038186803b158015610bbf57600080fd5b505afa158015610bd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf791906110f3565b151560a089015263ffffffff16608088015273ffffffffffffffffffffffffffffffffffffffff166060870152600690810b900b60408601525050600f90810b900b60208301526fffffffffffffffffffffffffffffffff169052506001909301925b600101610ae9565b5050600101610ac1565b50505050949350505050565b610c80610da5565b610c8b86868661036e565b9050610c9a86868686866107af565b60e082015295945050505050565b6040517fd9a641e100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff85169063d9a641e190610cff90869086906004016114a4565b60206040518083038186803b158015610d1757600080fd5b505afa158015610d2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4f9190610f86565b905073ffffffffffffffffffffffffffffffffffffffff8116610d9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014190611528565b9392505050565b604080516101208101825260008082526020820152908101610dc5610e69565b8152600060208201819052604082018190526060820152608001610de7610ead565b815260200160608152602001606081525090565b604080518082019091526000808252602082015290565b6040518060400160405280600060020b8152602001610e2f610e34565b905290565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915290565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b805180151581146107aa57600080fd5b8035600181900b81146107aa57600080fd5b8051600281900b81146107aa57600080fd5b8051600681900b81146107aa57600080fd5b80516fffffffffffffffffffffffffffffffff811681146107aa57600080fd5b805161ffff811681146107aa57600080fd5b805163ffffffff811681146107aa57600080fd5b805160ff811681146107aa57600080fd5b600060208284031215610f97578081fd5b8151610d9e816116ec565b600080600080600080600060e0888a031215610fbc578283fd5b610fc588610ee9565b9650610fd360208901610f61565b9550610fe160408901610f1d565b94506060880151610ff1816116ec565b60808901519094506affffffffffffffffffffff81168114611011578384fd5b925061101f60a08901610f0b565b915060c088015171ffffffffffffffffffffffffffffffffffff81168114611045578182fd5b8091505092959891949750929550565b600080600080600060a0868803121561106c578081fd5b8535611077816116ec565b94506020860135611087816116ec565b93506040860135611097816116ec565b92506110a560608701610ef9565b91506110b360808701610ef9565b90509295509295909350565b6000602082840312156110d0578081fd5b610d9e82610f0b565b6000602082840312156110ea578081fd5b610d9e82610f2f565b600080600080600080600080610100898b03121561110f578081fd5b61111889610f2f565b9750602089015180600f0b811461112d578182fd5b60408a015160608b01519198509650945061114a60808a01610f1d565b935060a089015161115a816116ec565b925061116860c08a01610f61565b915061117660e08a01610ee9565b90509295985092959890939650565b600080600080600080600080610100898b0312156111a1578182fd5b88516111ac816116ec565b97506111ba60208a01610f0b565b96506111c860408a01610f4f565b95506111d660608a01610f4f565b94506111e460808a01610f4f565b93506111f260a08a01610f75565b925061116860c08a01610f75565b600060208284031215611211578081fd5b5051919050565b805160010b82526020908101519082015260400190565b6000815180845260208085019450808401835b8381101561126357611255878351611218565b965090820190600101611242565b509495945050505050565b6000815180845260208085019450808401835b8381101561126357611294878351611218565b965090820190600101611281565b6000815180845260208085019450808401835b83811015611263578151805160020b885283015180516fffffffffffffffffffffffffffffffff168489015280840151600f0b6040808a019190915281015160060b6060808a019190915281015173ffffffffffffffffffffffffffffffffffffffff166080808a019190915281015163ffffffff1660a0808a01919091520151151560c088015260e090960195908201906001016112b5565b15159052565b73ffffffffffffffffffffffffffffffffffffffff169052565b60020b9052565b73ffffffffffffffffffffffffffffffffffffffff8151168252602081015160020b6020830152604081015161ffff8082166040850152806060840151166060850152806080840151166080850152505060ff60a08201511660a083015260c08101516113e660c084018261149d565b5060e08101516113f960e084018261134f565b505050565b80511515825263ffffffff6020820151166020830152604081015160060b604083015273ffffffffffffffffffffffffffffffffffffffff60608201511660608301526affffffffffffffffffffff608082015116608083015260a081015160020b60a083015271ffffffffffffffffffffffffffffffffffff60c08201511660c08301525050565b6fffffffffffffffffffffffffffffffff169052565b60ff169052565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b600060208252610d9e602083018461126e565b6000604082526114f1604083018561126e565b828103602084015261150381856112a2565b95945050505050565b60019190910b815260200190565b60029190910b815260200190565b60208082526013908201527f506f6f6c20646f6573206e6f7420657869737400000000000000000000000000604082015260600190565b6020808252601f908201527f7469636b4269746d6170456e64203c207469636b4269746d6170537461727400604082015260600190565b60208082526015908201527f6c6566744269746d6170416d6f756e74203c3d20300000000000000000000000604082015260600190565b60208082526016908201527f72696768744269746d6170416d6f756e74203c3d203000000000000000000000604082015260600190565b600060208252611618602083018451611355565b6020830151604083015260408301516116346060840182611376565b506060830151611648610160840182611487565b50608083015161165c61018084018261136f565b5060a08301516116706101a0840182611487565b5060c08301516116846101c08401826113fe565b5060e08301516102c0806102a08501526116a26102e085018361122f565b91506101008501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe085840301828601526102ab83826112a2565b61ffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461170e57600080fd5b5056fea164736f6c6343000705000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c80636ae935db116100505780636ae935db146100a85780638cad7c9e146100bb578063bc34cce2146100dc57610067565b806306cbe3ba1461006c5780634cb74eb614610095575b600080fd5b61007f61007a366004611055565b6100fc565b60405161008c9190611604565b60405180910390f35b61007f6100a3366004611055565b6101e0565b61007f6100b6366004611055565b610256565b6100ce6100c9366004611055565b6102b5565b60405161008c9291906114de565b6100ef6100ea366004611055565b61031f565b60405161008c91906114cb565b610104610da5565b60008360010b1361014a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014190611596565b60405180910390fd5b60008260010b13610187576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610141906115cd565b61019286868661036e565b905060006101a78260400151602001516107a1565b90506101ba8787878785038786016107af565b60e083018190526101d0908890889088906109fd565b6101008301525095945050505050565b6101e8610da5565b8260010b8260010b1215610228576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101419061155f565b6102358686868686610c78565b90506102478686868460e001516109fd565b61010082015295945050505050565b61025e610da5565b8260010b8260010b121561029e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101419061155f565b6102ab8686868686610c78565b9695505050505050565b6060808360010b8360010b12156102f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101419061155f565b61030587878787876107af565b9150610313878787856109fd565b90509550959350505050565b60608260010b8260010b1215610361576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101419061155f565b6102ab86868686866107af565b610376610da5565b6000610383858585610ca8565b73ffffffffffffffffffffffffffffffffffffffff811680845242602080860191909152604080517f1a68650200000000000000000000000000000000000000000000000000000000815290519394509192631a686502926004808201939291829003018186803b1580156103f757600080fd5b505afa15801561040b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042f91906110d9565b6fffffffffffffffffffffffffffffffff166060830152604080517fd0c93a7c000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff83169163d0c93a7c916004808301926020929190829003018186803b1580156104ac57600080fd5b505afa1580156104c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e491906110bf565b826080019060020b908160020b815250508073ffffffffffffffffffffffffffffffffffffffff166370cf754a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561053b57600080fd5b505afa15801561054f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057391906110d9565b6fffffffffffffffffffffffffffffffff1660a0830152604080517fe76c01e4000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff83169163e76c01e491600480830192610100929190829003018186803b1580156105f157600080fd5b505afa158015610605573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106299190611185565b506040808a01805160ff93841660c08201529390921660a084015261ffff93841660808085019190915294841660608401529490921681850152600294850b90940b602085015273ffffffffffffffffffffffffffffffffffffffff94851690935291519091015190517f74eceae6000000000000000000000000000000000000000000000000000000008152918316916374eceae6916106cc916004016116dd565b60e06040518083038186803b1580156106e457600080fd5b505afa1580156106f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071c9190610fa2565b60c0808a015171ffffffffffffffffffffffffffffffffffff90921690820152600291820b90910b60a08201526affffffffffffffffffffff909116608082015273ffffffffffffffffffffffffffffffffffffffff9091166060820152600691820b90910b604082015263ffffffff90911660208201529015159052509392505050565b600281900b60081d5b919050565b606060006107be878787610ca8565b90506000600185900b5b8460010b8113610894576040517fc677e3e000000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff85169063c677e3e09061082790859060040161150c565b60206040518083038186803b15801561083f57600080fd5b505afa158015610853573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108779190611200565b905080610884575061088c565b506001909101905b6001016107c8565b508067ffffffffffffffff811180156108ac57600080fd5b506040519080825280602002602001820160405280156108e657816020015b6108d3610dfb565b8152602001906001900390816108cb5790505b5092506000600186900b5b8560010b81136109f0576040517fc677e3e0000000000000000000000000000000000000000000000000000000008152819060009073ffffffffffffffffffffffffffffffffffffffff87169063c677e3e09061095290859060040161150c565b60206040518083038186803b15801561096a57600080fd5b505afa15801561097e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a29190611200565b9050806109b05750506109e8565b60405180604001604052808360010b8152602001828152508785815181106109d457fe5b602090810291909101015250506001909101905b6001016108f1565b5050505095945050505050565b60606000610a0c868686610ca8565b90506000805b8451811015610a68576000858281518110610a2957fe5b602002602001015160200151905060005b610100811015610a5e576001811b821615610a56576001909301925b600101610a3a565b5050600101610a12565b508067ffffffffffffffff81118015610a8057600080fd5b50604051908082528060200260200182016040528015610aba57816020015b610aa7610e12565b815260200190600190039081610a9f5790505b5092506000805b8551811015610c6c576000868281518110610ad857fe5b602002602001015160200151905060005b610100811015610c62576001811b821615610c5a5760008160088a8681518110610b0f57fe5b60200260200101516000015160010b60020b901b01905080888681518110610b3357fe5b60200260200101516000019060020b908160020b81525050610b53610e34565b888681518110610b5f57fe5b60200260200101516020015190508773ffffffffffffffffffffffffffffffffffffffff1663f30dba93836040518263ffffffff1660e01b8152600401610ba6919061151a565b6101006040518083038186803b158015610bbf57600080fd5b505afa158015610bd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf791906110f3565b151560a089015263ffffffff16608088015273ffffffffffffffffffffffffffffffffffffffff166060870152600690810b900b60408601525050600f90810b900b60208301526fffffffffffffffffffffffffffffffff169052506001909301925b600101610ae9565b5050600101610ac1565b50505050949350505050565b610c80610da5565b610c8b86868661036e565b9050610c9a86868686866107af565b60e082015295945050505050565b6040517fd9a641e100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff85169063d9a641e190610cff90869086906004016114a4565b60206040518083038186803b158015610d1757600080fd5b505afa158015610d2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4f9190610f86565b905073ffffffffffffffffffffffffffffffffffffffff8116610d9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014190611528565b9392505050565b604080516101208101825260008082526020820152908101610dc5610e69565b8152600060208201819052604082018190526060820152608001610de7610ead565b815260200160608152602001606081525090565b604080518082019091526000808252602082015290565b6040518060400160405280600060020b8152602001610e2f610e34565b905290565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915290565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b805180151581146107aa57600080fd5b8035600181900b81146107aa57600080fd5b8051600281900b81146107aa57600080fd5b8051600681900b81146107aa57600080fd5b80516fffffffffffffffffffffffffffffffff811681146107aa57600080fd5b805161ffff811681146107aa57600080fd5b805163ffffffff811681146107aa57600080fd5b805160ff811681146107aa57600080fd5b600060208284031215610f97578081fd5b8151610d9e816116ec565b600080600080600080600060e0888a031215610fbc578283fd5b610fc588610ee9565b9650610fd360208901610f61565b9550610fe160408901610f1d565b94506060880151610ff1816116ec565b60808901519094506affffffffffffffffffffff81168114611011578384fd5b925061101f60a08901610f0b565b915060c088015171ffffffffffffffffffffffffffffffffffff81168114611045578182fd5b8091505092959891949750929550565b600080600080600060a0868803121561106c578081fd5b8535611077816116ec565b94506020860135611087816116ec565b93506040860135611097816116ec565b92506110a560608701610ef9565b91506110b360808701610ef9565b90509295509295909350565b6000602082840312156110d0578081fd5b610d9e82610f0b565b6000602082840312156110ea578081fd5b610d9e82610f2f565b600080600080600080600080610100898b03121561110f578081fd5b61111889610f2f565b9750602089015180600f0b811461112d578182fd5b60408a015160608b01519198509650945061114a60808a01610f1d565b935060a089015161115a816116ec565b925061116860c08a01610f61565b915061117660e08a01610ee9565b90509295985092959890939650565b600080600080600080600080610100898b0312156111a1578182fd5b88516111ac816116ec565b97506111ba60208a01610f0b565b96506111c860408a01610f4f565b95506111d660608a01610f4f565b94506111e460808a01610f4f565b93506111f260a08a01610f75565b925061116860c08a01610f75565b600060208284031215611211578081fd5b5051919050565b805160010b82526020908101519082015260400190565b6000815180845260208085019450808401835b8381101561126357611255878351611218565b965090820190600101611242565b509495945050505050565b6000815180845260208085019450808401835b8381101561126357611294878351611218565b965090820190600101611281565b6000815180845260208085019450808401835b83811015611263578151805160020b885283015180516fffffffffffffffffffffffffffffffff168489015280840151600f0b6040808a019190915281015160060b6060808a019190915281015173ffffffffffffffffffffffffffffffffffffffff166080808a019190915281015163ffffffff1660a0808a01919091520151151560c088015260e090960195908201906001016112b5565b15159052565b73ffffffffffffffffffffffffffffffffffffffff169052565b60020b9052565b73ffffffffffffffffffffffffffffffffffffffff8151168252602081015160020b6020830152604081015161ffff8082166040850152806060840151166060850152806080840151166080850152505060ff60a08201511660a083015260c08101516113e660c084018261149d565b5060e08101516113f960e084018261134f565b505050565b80511515825263ffffffff6020820151166020830152604081015160060b604083015273ffffffffffffffffffffffffffffffffffffffff60608201511660608301526affffffffffffffffffffff608082015116608083015260a081015160020b60a083015271ffffffffffffffffffffffffffffffffffff60c08201511660c08301525050565b6fffffffffffffffffffffffffffffffff169052565b60ff169052565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b600060208252610d9e602083018461126e565b6000604082526114f1604083018561126e565b828103602084015261150381856112a2565b95945050505050565b60019190910b815260200190565b60029190910b815260200190565b60208082526013908201527f506f6f6c20646f6573206e6f7420657869737400000000000000000000000000604082015260600190565b6020808252601f908201527f7469636b4269746d6170456e64203c207469636b4269746d6170537461727400604082015260600190565b60208082526015908201527f6c6566744269746d6170416d6f756e74203c3d20300000000000000000000000604082015260600190565b60208082526016908201527f72696768744269746d6170416d6f756e74203c3d203000000000000000000000604082015260600190565b600060208252611618602083018451611355565b6020830151604083015260408301516116346060840182611376565b506060830151611648610160840182611487565b50608083015161165c61018084018261136f565b5060a08301516116706101a0840182611487565b5060c08301516116846101c08401826113fe565b5060e08301516102c0806102a08501526116a26102e085018361122f565b91506101008501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe085840301828601526102ab83826112a2565b61ffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461170e57600080fd5b5056fea164736f6c6343000705000a"
}
