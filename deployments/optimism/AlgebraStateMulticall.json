{
  "address": "0x30F6B9b6485ff0B67E881f5ac80D3F1c70A4B23d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IAlgebraFactory",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapStart",
          "type": "int16"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapEnd",
          "type": "int16"
        }
      ],
      "name": "getAdditionalBitmapWithTicks",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int16",
              "name": "index",
              "type": "int16"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "internalType": "struct IAlgebraStateMulticall.TickBitMapMappings[]",
          "name": "tickBitmap",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "int24",
              "name": "index",
              "type": "int24"
            },
            {
              "components": [
                {
                  "internalType": "uint128",
                  "name": "liquidityGross",
                  "type": "uint128"
                },
                {
                  "internalType": "int128",
                  "name": "liquidityNet",
                  "type": "int128"
                },
                {
                  "internalType": "int56",
                  "name": "tickCumulativeOutside",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityOutsideX128",
                  "type": "uint160"
                },
                {
                  "internalType": "uint32",
                  "name": "secondsOutside",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.TickInfo",
              "name": "value",
              "type": "tuple"
            }
          ],
          "internalType": "struct IAlgebraStateMulticall.TickInfoMappings[]",
          "name": "ticks",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAlgebraFactory",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapStart",
          "type": "int16"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapEnd",
          "type": "int16"
        }
      ],
      "name": "getAdditionalBitmapWithoutTicks",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int16",
              "name": "index",
              "type": "int16"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "internalType": "struct IAlgebraStateMulticall.TickBitMapMappings[]",
          "name": "tickBitmap",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAlgebraFactory",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapStart",
          "type": "int16"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapEnd",
          "type": "int16"
        }
      ],
      "name": "getFullState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IAlgebraPool",
              "name": "pool",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockTimestamp",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint160",
                  "name": "price",
                  "type": "uint160"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint16",
                  "name": "fee",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "timepointIndex",
                  "type": "uint16"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFeeToken0",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFeeToken1",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "unlocked",
                  "type": "bool"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.GlobalState",
              "name": "globalState",
              "type": "tuple"
            },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "uint128",
              "name": "maxLiquidityPerTick",
              "type": "uint128"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                },
                {
                  "internalType": "uint32",
                  "name": "blockTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "int56",
                  "name": "tickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityCumulative",
                  "type": "uint160"
                },
                {
                  "internalType": "uint88",
                  "name": "volatilityCumulative",
                  "type": "uint88"
                },
                {
                  "internalType": "int24",
                  "name": "averageTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint144",
                  "name": "volumePerLiquidityCumulative",
                  "type": "uint144"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.Timepoints",
              "name": "timepoints",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "int16",
                  "name": "index",
                  "type": "int16"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.TickBitMapMappings[]",
              "name": "tickBitmap",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "int24",
                  "name": "index",
                  "type": "int24"
                },
                {
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "liquidityGross",
                      "type": "uint128"
                    },
                    {
                      "internalType": "int128",
                      "name": "liquidityNet",
                      "type": "int128"
                    },
                    {
                      "internalType": "int56",
                      "name": "tickCumulativeOutside",
                      "type": "int56"
                    },
                    {
                      "internalType": "uint160",
                      "name": "secondsPerLiquidityOutsideX128",
                      "type": "uint160"
                    },
                    {
                      "internalType": "uint32",
                      "name": "secondsOutside",
                      "type": "uint32"
                    },
                    {
                      "internalType": "bool",
                      "name": "initialized",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IAlgebraStateMulticall.TickInfo",
                  "name": "value",
                  "type": "tuple"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.TickInfoMappings[]",
              "name": "ticks",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct IAlgebraStateMulticall.StateResult",
          "name": "state",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAlgebraFactory",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "int16",
          "name": "leftBitmapAmount",
          "type": "int16"
        },
        {
          "internalType": "int16",
          "name": "rightBitmapAmount",
          "type": "int16"
        }
      ],
      "name": "getFullStateWithRelativeBitmaps",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IAlgebraPool",
              "name": "pool",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockTimestamp",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint160",
                  "name": "price",
                  "type": "uint160"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint16",
                  "name": "fee",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "timepointIndex",
                  "type": "uint16"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFeeToken0",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFeeToken1",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "unlocked",
                  "type": "bool"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.GlobalState",
              "name": "globalState",
              "type": "tuple"
            },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "uint128",
              "name": "maxLiquidityPerTick",
              "type": "uint128"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                },
                {
                  "internalType": "uint32",
                  "name": "blockTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "int56",
                  "name": "tickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityCumulative",
                  "type": "uint160"
                },
                {
                  "internalType": "uint88",
                  "name": "volatilityCumulative",
                  "type": "uint88"
                },
                {
                  "internalType": "int24",
                  "name": "averageTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint144",
                  "name": "volumePerLiquidityCumulative",
                  "type": "uint144"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.Timepoints",
              "name": "timepoints",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "int16",
                  "name": "index",
                  "type": "int16"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.TickBitMapMappings[]",
              "name": "tickBitmap",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "int24",
                  "name": "index",
                  "type": "int24"
                },
                {
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "liquidityGross",
                      "type": "uint128"
                    },
                    {
                      "internalType": "int128",
                      "name": "liquidityNet",
                      "type": "int128"
                    },
                    {
                      "internalType": "int56",
                      "name": "tickCumulativeOutside",
                      "type": "int56"
                    },
                    {
                      "internalType": "uint160",
                      "name": "secondsPerLiquidityOutsideX128",
                      "type": "uint160"
                    },
                    {
                      "internalType": "uint32",
                      "name": "secondsOutside",
                      "type": "uint32"
                    },
                    {
                      "internalType": "bool",
                      "name": "initialized",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IAlgebraStateMulticall.TickInfo",
                  "name": "value",
                  "type": "tuple"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.TickInfoMappings[]",
              "name": "ticks",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct IAlgebraStateMulticall.StateResult",
          "name": "state",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAlgebraFactory",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapStart",
          "type": "int16"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapEnd",
          "type": "int16"
        }
      ],
      "name": "getFullStateWithoutTicks",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IAlgebraPool",
              "name": "pool",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockTimestamp",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint160",
                  "name": "price",
                  "type": "uint160"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint16",
                  "name": "fee",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "timepointIndex",
                  "type": "uint16"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFeeToken0",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFeeToken1",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "unlocked",
                  "type": "bool"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.GlobalState",
              "name": "globalState",
              "type": "tuple"
            },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "uint128",
              "name": "maxLiquidityPerTick",
              "type": "uint128"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                },
                {
                  "internalType": "uint32",
                  "name": "blockTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "int56",
                  "name": "tickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityCumulative",
                  "type": "uint160"
                },
                {
                  "internalType": "uint88",
                  "name": "volatilityCumulative",
                  "type": "uint88"
                },
                {
                  "internalType": "int24",
                  "name": "averageTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint144",
                  "name": "volumePerLiquidityCumulative",
                  "type": "uint144"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.Timepoints",
              "name": "timepoints",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "int16",
                  "name": "index",
                  "type": "int16"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.TickBitMapMappings[]",
              "name": "tickBitmap",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "int24",
                  "name": "index",
                  "type": "int24"
                },
                {
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "liquidityGross",
                      "type": "uint128"
                    },
                    {
                      "internalType": "int128",
                      "name": "liquidityNet",
                      "type": "int128"
                    },
                    {
                      "internalType": "int56",
                      "name": "tickCumulativeOutside",
                      "type": "int56"
                    },
                    {
                      "internalType": "uint160",
                      "name": "secondsPerLiquidityOutsideX128",
                      "type": "uint160"
                    },
                    {
                      "internalType": "uint32",
                      "name": "secondsOutside",
                      "type": "uint32"
                    },
                    {
                      "internalType": "bool",
                      "name": "initialized",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IAlgebraStateMulticall.TickInfo",
                  "name": "value",
                  "type": "tuple"
                }
              ],
              "internalType": "struct IAlgebraStateMulticall.TickInfoMappings[]",
              "name": "ticks",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct IAlgebraStateMulticall.StateResult",
          "name": "state",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xe6221dcd18ee018a8016a49c6b8e0d762be1b732c2ddbe52d0e93b29a07d8941",
  "receipt": {
    "to": null,
    "from": "0x450C01300B83bE379113256038b4Dd3b45d23B5e",
    "contractAddress": "0x30F6B9b6485ff0B67E881f5ac80D3F1c70A4B23d",
    "transactionIndex": 7,
    "gasUsed": "1337757",
    "logsBloom": "0x
    "blockHash": "0x727adcefaa21b0b87f48b9b0d6044d09481f33e069514ff7fcffc96a8b56070f",
    "transactionHash": "0xe6221dcd18ee018a8016a49c6b8e0d762be1b732c2ddbe52d0e93b29a07d8941",
    "logs": [],
    "blockNumber": 107702247,
    "cumulativeGasUsed": "2369656",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "bytecode": "0x608060405234801561001057600080fd5b50611753806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80636ae935db116100505780636ae935db146100a85780638cad7c9e146100bb578063bc34cce2146100dc57610067565b806306cbe3ba1461006c5780634cb74eb614610095575b600080fd5b61007f61007a3660046110a4565b6100fc565b60405161008c9190611639565b60405180910390f35b61007f6100a33660046110a4565b6101f3565b61007f6100b63660046110a4565b610269565b6100ce6100c93660046110a4565b6102c8565b60405161008c929190611513565b6100ef6100ea3660046110a4565b610332565b60405161008c9190611500565b610104610e38565b60008360010b1361014a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610141906115cb565b60405180910390fd5b60008260010b13610187576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014190611602565b610192868686610381565b905060006101ba826080015160020b83604001516020015160020b816101b457fe5b056107af565b90506101cd8787878785038786016107bd565b60e083018190526101e390889088908890610a0b565b6101008301525095945050505050565b6101fb610e38565b8260010b8260010b121561023b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014190611594565b6102488686868686610d0b565b905061025a8686868460e00151610a0b565b61010082015295945050505050565b610271610e38565b8260010b8260010b12156102b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014190611594565b6102be8686868686610d0b565b9695505050505050565b6060808360010b8360010b121561030b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014190611594565b61031887878787876107bd565b915061032687878785610a0b565b90509550959350505050565b60608260010b8260010b1215610374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014190611594565b6102be86868686866107bd565b610389610e38565b6000610396858585610d3b565b73ffffffffffffffffffffffffffffffffffffffff811680845242602080860191909152604080517f1a68650200000000000000000000000000000000000000000000000000000000815290519394509192631a686502926004808201939291829003018186803b15801561040a57600080fd5b505afa15801561041e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104429190611128565b6fffffffffffffffffffffffffffffffff166060830152604080517fd0c93a7c000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff83169163d0c93a7c916004808301926020929190829003018186803b1580156104bf57600080fd5b505afa1580156104d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f7919061110e565b826080019060020b908160020b815250508073ffffffffffffffffffffffffffffffffffffffff166370cf754a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561054e57600080fd5b505afa158015610562573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105869190611128565b6fffffffffffffffffffffffffffffffff1660a0830152604080517fe76c01e4000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff83169163e76c01e49160048083019260e0929190829003018186803b15801561060357600080fd5b505afa158015610617573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063b91906111d4565b6040808a01805192151560c084015260ff93841660a084015293909216608082015261ffff9384166060808301919091529490931683820152600294850b90940b602083015273ffffffffffffffffffffffffffffffffffffffff94851690915251015190517f74eceae6000000000000000000000000000000000000000000000000000000008152918316916374eceae6916106da91600401611712565b60e06040518083038186803b1580156106f257600080fd5b505afa158015610706573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072a9190610ff1565b60c0808a015171ffffffffffffffffffffffffffffffffffff90921690820152600291820b90910b60a08201526affffffffffffffffffffff909116608082015273ffffffffffffffffffffffffffffffffffffffff9091166060820152600691820b90910b604082015263ffffffff90911660208201529015159052509392505050565b600281900b60081d5b919050565b606060006107cc878787610d3b565b90506000600185900b5b8460010b81136108a2576040517fc677e3e000000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff85169063c677e3e090610835908590600401611541565b60206040518083038186803b15801561084d57600080fd5b505afa158015610861573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610885919061125b565b905080610892575061089a565b506001909101905b6001016107d6565b508067ffffffffffffffff811180156108ba57600080fd5b506040519080825280602002602001820160405280156108f457816020015b6108e1610e8e565b8152602001906001900390816108d95790505b5092506000600186900b5b8560010b81136109fe576040517fc677e3e0000000000000000000000000000000000000000000000000000000008152819060009073ffffffffffffffffffffffffffffffffffffffff87169063c677e3e090610960908590600401611541565b60206040518083038186803b15801561097857600080fd5b505afa15801561098c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b0919061125b565b9050806109be5750506109f6565b60405180604001604052808360010b8152602001828152508785815181106109e257fe5b602090810291909101015250506001909101905b6001016108ff565b5050505095945050505050565b60606000610a1a868686610d3b565b90506000805b8451811015610a76576000858281518110610a3757fe5b602002602001015160200151905060005b610100811015610a6c576001811b821615610a64576001909301925b600101610a48565b5050600101610a20565b508067ffffffffffffffff81118015610a8e57600080fd5b50604051908082528060200260200182016040528015610ac857816020015b610ab5610ea5565b815260200190600190039081610aad5790505b50925060008273ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b1357600080fd5b505afa158015610b27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4b919061110e565b90506000805b8651811015610cfe576000878281518110610b6857fe5b602002602001015160200151905060005b610100811015610cf4576001811b821615610cec576000858260088c8781518110610ba057fe5b60200260200101516000015160010b60020b901b0102905080898681518110610bc557fe5b60200260200101516000019060020b908160020b81525050610be5610ec7565b898681518110610bf157fe5b60200260200101516020015190508873ffffffffffffffffffffffffffffffffffffffff1663f30dba93836040518263ffffffff1660e01b8152600401610c38919061154f565b6101006040518083038186803b158015610c5157600080fd5b505afa158015610c65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c899190611142565b151560a089015263ffffffff16608088015273ffffffffffffffffffffffffffffffffffffffff166060870152600690810b900b60408601525050600f90810b900b60208301526fffffffffffffffffffffffffffffffff169052506001909301925b600101610b79565b5050600101610b51565b5050505050949350505050565b610d13610e38565b610d1e868686610381565b9050610d2d86868686866107bd565b60e082015295945050505050565b6040517fd9a641e100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff85169063d9a641e190610d9290869086906004016114d9565b60206040518083038186803b158015610daa57600080fd5b505afa158015610dbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de29190610fd5565b905073ffffffffffffffffffffffffffffffffffffffff8116610e31576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101419061155d565b9392505050565b604080516101208101825260008082526020820152908101610e58610efc565b8152600060208201819052604082018190526060820152608001610e7a610efc565b815260200160608152602001606081525090565b604080518082019091526000808252602082015290565b6040518060400160405280600060020b8152602001610ec2610ec7565b905290565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b805180151581146107b857600080fd5b8035600181900b81146107b857600080fd5b8051600281900b81146107b857600080fd5b8051600681900b81146107b857600080fd5b80516fffffffffffffffffffffffffffffffff811681146107b857600080fd5b805161ffff811681146107b857600080fd5b805163ffffffff811681146107b857600080fd5b805160ff811681146107b857600080fd5b600060208284031215610fe6578081fd5b8151610e3181611721565b600080600080600080600060e0888a03121561100b578283fd5b61101488610f38565b965061102260208901610fb0565b955061103060408901610f6c565b9450606088015161104081611721565b60808901519094506affffffffffffffffffffff81168114611060578384fd5b925061106e60a08901610f5a565b915060c088015171ffffffffffffffffffffffffffffffffffff81168114611094578182fd5b8091505092959891949750929550565b600080600080600060a086880312156110bb578081fd5b85356110c681611721565b945060208601356110d681611721565b935060408601356110e681611721565b92506110f460608701610f48565b915061110260808701610f48565b90509295509295909350565b60006020828403121561111f578081fd5b610e3182610f5a565b600060208284031215611139578081fd5b610e3182610f7e565b600080600080600080600080610100898b03121561115e578081fd5b61116789610f7e565b9750602089015180600f0b811461117c578182fd5b60408a015160608b01519198509650945061119960808a01610f6c565b935060a08901516111a981611721565b92506111b760c08a01610fb0565b91506111c560e08a01610f38565b90509295985092959890939650565b600080600080600080600060e0888a0312156111ee578081fd5b87516111f981611721565b965061120760208901610f5a565b955061121560408901610f9e565b945061122360608901610f9e565b935061123160808901610fc4565b925061123f60a08901610fc4565b915061124d60c08901610f38565b905092959891949750929550565b60006020828403121561126c578081fd5b5051919050565b805160010b82526020908101519082015260400190565b6000815180845260208085019450808401835b838110156112be576112b0878351611273565b96509082019060010161129d565b509495945050505050565b6000815180845260208085019450808401835b838110156112be576112ef878351611273565b9650908201906001016112dc565b6000815180845260208085019450808401835b838110156112be578151805160020b885283015180516fffffffffffffffffffffffffffffffff168489015280840151600f0b6040808a019190915281015160060b6060808a019190915281015173ffffffffffffffffffffffffffffffffffffffff166080808a019190915281015163ffffffff1660a0808a01919091520151151560c088015260e09096019590820190600101611310565b73ffffffffffffffffffffffffffffffffffffffff169052565b60020b9052565b73ffffffffffffffffffffffffffffffffffffffff8151168252602081015160020b6020830152604081015161ffff8082166040850152806060840151166060850152505060ff608082015116608083015260ff60a08201511660a083015260c0810151151560c08301525050565b80511515825263ffffffff6020820151166020830152604081015160060b604083015273ffffffffffffffffffffffffffffffffffffffff60608201511660608301526affffffffffffffffffffff608082015116608083015260a081015160020b60a083015271ffffffffffffffffffffffffffffffffffff60c08201511660c08301525050565b6fffffffffffffffffffffffffffffffff169052565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b600060208252610e3160208301846112c9565b60006040825261152660408301856112c9565b828103602084015261153881856112fd565b95945050505050565b60019190910b815260200190565b60029190910b815260200190565b60208082526013908201527f506f6f6c20646f6573206e6f7420657869737400000000000000000000000000604082015260600190565b6020808252601f908201527f7469636b4269746d6170456e64203c207469636b4269746d6170537461727400604082015260600190565b60208082526015908201527f6c6566744269746d6170416d6f756e74203c3d20300000000000000000000000604082015260600190565b60208082526016908201527f72696768744269746d6170416d6f756e74203c3d203000000000000000000000604082015260600190565b60006020825261164d6020830184516113aa565b60208301516040830152604083015161166960608401826113cb565b50606083015161167d6101408401826114c3565b5060808301516116916101608401826113c4565b5060a08301516116a56101808401826114c3565b5060c08301516116b96101a084018261143a565b5060e08301516102a0806102808501526116d76102c085018361128a565b91506101008501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe085840301828601526102be83826112fd565b61ffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461174357600080fd5b5056fea164736f6c6343000705000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c80636ae935db116100505780636ae935db146100a85780638cad7c9e146100bb578063bc34cce2146100dc57610067565b806306cbe3ba1461006c5780634cb74eb614610095575b600080fd5b61007f61007a3660046110a4565b6100fc565b60405161008c9190611639565b60405180910390f35b61007f6100a33660046110a4565b6101f3565b61007f6100b63660046110a4565b610269565b6100ce6100c93660046110a4565b6102c8565b60405161008c929190611513565b6100ef6100ea3660046110a4565b610332565b60405161008c9190611500565b610104610e38565b60008360010b1361014a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610141906115cb565b60405180910390fd5b60008260010b13610187576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014190611602565b610192868686610381565b905060006101ba826080015160020b83604001516020015160020b816101b457fe5b056107af565b90506101cd8787878785038786016107bd565b60e083018190526101e390889088908890610a0b565b6101008301525095945050505050565b6101fb610e38565b8260010b8260010b121561023b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014190611594565b6102488686868686610d0b565b905061025a8686868460e00151610a0b565b61010082015295945050505050565b610271610e38565b8260010b8260010b12156102b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014190611594565b6102be8686868686610d0b565b9695505050505050565b6060808360010b8360010b121561030b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014190611594565b61031887878787876107bd565b915061032687878785610a0b565b90509550959350505050565b60608260010b8260010b1215610374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014190611594565b6102be86868686866107bd565b610389610e38565b6000610396858585610d3b565b73ffffffffffffffffffffffffffffffffffffffff811680845242602080860191909152604080517f1a68650200000000000000000000000000000000000000000000000000000000815290519394509192631a686502926004808201939291829003018186803b15801561040a57600080fd5b505afa15801561041e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104429190611128565b6fffffffffffffffffffffffffffffffff166060830152604080517fd0c93a7c000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff83169163d0c93a7c916004808301926020929190829003018186803b1580156104bf57600080fd5b505afa1580156104d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f7919061110e565b826080019060020b908160020b815250508073ffffffffffffffffffffffffffffffffffffffff166370cf754a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561054e57600080fd5b505afa158015610562573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105869190611128565b6fffffffffffffffffffffffffffffffff1660a0830152604080517fe76c01e4000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff83169163e76c01e49160048083019260e0929190829003018186803b15801561060357600080fd5b505afa158015610617573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063b91906111d4565b6040808a01805192151560c084015260ff93841660a084015293909216608082015261ffff9384166060808301919091529490931683820152600294850b90940b602083015273ffffffffffffffffffffffffffffffffffffffff94851690915251015190517f74eceae6000000000000000000000000000000000000000000000000000000008152918316916374eceae6916106da91600401611712565b60e06040518083038186803b1580156106f257600080fd5b505afa158015610706573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072a9190610ff1565b60c0808a015171ffffffffffffffffffffffffffffffffffff90921690820152600291820b90910b60a08201526affffffffffffffffffffff909116608082015273ffffffffffffffffffffffffffffffffffffffff9091166060820152600691820b90910b604082015263ffffffff90911660208201529015159052509392505050565b600281900b60081d5b919050565b606060006107cc878787610d3b565b90506000600185900b5b8460010b81136108a2576040517fc677e3e000000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff85169063c677e3e090610835908590600401611541565b60206040518083038186803b15801561084d57600080fd5b505afa158015610861573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610885919061125b565b905080610892575061089a565b506001909101905b6001016107d6565b508067ffffffffffffffff811180156108ba57600080fd5b506040519080825280602002602001820160405280156108f457816020015b6108e1610e8e565b8152602001906001900390816108d95790505b5092506000600186900b5b8560010b81136109fe576040517fc677e3e0000000000000000000000000000000000000000000000000000000008152819060009073ffffffffffffffffffffffffffffffffffffffff87169063c677e3e090610960908590600401611541565b60206040518083038186803b15801561097857600080fd5b505afa15801561098c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b0919061125b565b9050806109be5750506109f6565b60405180604001604052808360010b8152602001828152508785815181106109e257fe5b602090810291909101015250506001909101905b6001016108ff565b5050505095945050505050565b60606000610a1a868686610d3b565b90506000805b8451811015610a76576000858281518110610a3757fe5b602002602001015160200151905060005b610100811015610a6c576001811b821615610a64576001909301925b600101610a48565b5050600101610a20565b508067ffffffffffffffff81118015610a8e57600080fd5b50604051908082528060200260200182016040528015610ac857816020015b610ab5610ea5565b815260200190600190039081610aad5790505b50925060008273ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b1357600080fd5b505afa158015610b27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4b919061110e565b90506000805b8651811015610cfe576000878281518110610b6857fe5b602002602001015160200151905060005b610100811015610cf4576001811b821615610cec576000858260088c8781518110610ba057fe5b60200260200101516000015160010b60020b901b0102905080898681518110610bc557fe5b60200260200101516000019060020b908160020b81525050610be5610ec7565b898681518110610bf157fe5b60200260200101516020015190508873ffffffffffffffffffffffffffffffffffffffff1663f30dba93836040518263ffffffff1660e01b8152600401610c38919061154f565b6101006040518083038186803b158015610c5157600080fd5b505afa158015610c65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c899190611142565b151560a089015263ffffffff16608088015273ffffffffffffffffffffffffffffffffffffffff166060870152600690810b900b60408601525050600f90810b900b60208301526fffffffffffffffffffffffffffffffff169052506001909301925b600101610b79565b5050600101610b51565b5050505050949350505050565b610d13610e38565b610d1e868686610381565b9050610d2d86868686866107bd565b60e082015295945050505050565b6040517fd9a641e100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff85169063d9a641e190610d9290869086906004016114d9565b60206040518083038186803b158015610daa57600080fd5b505afa158015610dbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de29190610fd5565b905073ffffffffffffffffffffffffffffffffffffffff8116610e31576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101419061155d565b9392505050565b604080516101208101825260008082526020820152908101610e58610efc565b8152600060208201819052604082018190526060820152608001610e7a610efc565b815260200160608152602001606081525090565b604080518082019091526000808252602082015290565b6040518060400160405280600060020b8152602001610ec2610ec7565b905290565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b805180151581146107b857600080fd5b8035600181900b81146107b857600080fd5b8051600281900b81146107b857600080fd5b8051600681900b81146107b857600080fd5b80516fffffffffffffffffffffffffffffffff811681146107b857600080fd5b805161ffff811681146107b857600080fd5b805163ffffffff811681146107b857600080fd5b805160ff811681146107b857600080fd5b600060208284031215610fe6578081fd5b8151610e3181611721565b600080600080600080600060e0888a03121561100b578283fd5b61101488610f38565b965061102260208901610fb0565b955061103060408901610f6c565b9450606088015161104081611721565b60808901519094506affffffffffffffffffffff81168114611060578384fd5b925061106e60a08901610f5a565b915060c088015171ffffffffffffffffffffffffffffffffffff81168114611094578182fd5b8091505092959891949750929550565b600080600080600060a086880312156110bb578081fd5b85356110c681611721565b945060208601356110d681611721565b935060408601356110e681611721565b92506110f460608701610f48565b915061110260808701610f48565b90509295509295909350565b60006020828403121561111f578081fd5b610e3182610f5a565b600060208284031215611139578081fd5b610e3182610f7e565b600080600080600080600080610100898b03121561115e578081fd5b61116789610f7e565b9750602089015180600f0b811461117c578182fd5b60408a015160608b01519198509650945061119960808a01610f6c565b935060a08901516111a981611721565b92506111b760c08a01610fb0565b91506111c560e08a01610f38565b90509295985092959890939650565b600080600080600080600060e0888a0312156111ee578081fd5b87516111f981611721565b965061120760208901610f5a565b955061121560408901610f9e565b945061122360608901610f9e565b935061123160808901610fc4565b925061123f60a08901610fc4565b915061124d60c08901610f38565b905092959891949750929550565b60006020828403121561126c578081fd5b5051919050565b805160010b82526020908101519082015260400190565b6000815180845260208085019450808401835b838110156112be576112b0878351611273565b96509082019060010161129d565b509495945050505050565b6000815180845260208085019450808401835b838110156112be576112ef878351611273565b9650908201906001016112dc565b6000815180845260208085019450808401835b838110156112be578151805160020b885283015180516fffffffffffffffffffffffffffffffff168489015280840151600f0b6040808a019190915281015160060b6060808a019190915281015173ffffffffffffffffffffffffffffffffffffffff166080808a019190915281015163ffffffff1660a0808a01919091520151151560c088015260e09096019590820190600101611310565b73ffffffffffffffffffffffffffffffffffffffff169052565b60020b9052565b73ffffffffffffffffffffffffffffffffffffffff8151168252602081015160020b6020830152604081015161ffff8082166040850152806060840151166060850152505060ff608082015116608083015260ff60a08201511660a083015260c0810151151560c08301525050565b80511515825263ffffffff6020820151166020830152604081015160060b604083015273ffffffffffffffffffffffffffffffffffffffff60608201511660608301526affffffffffffffffffffff608082015116608083015260a081015160020b60a083015271ffffffffffffffffffffffffffffffffffff60c08201511660c08301525050565b6fffffffffffffffffffffffffffffffff169052565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b600060208252610e3160208301846112c9565b60006040825261152660408301856112c9565b828103602084015261153881856112fd565b95945050505050565b60019190910b815260200190565b60029190910b815260200190565b60208082526013908201527f506f6f6c20646f6573206e6f7420657869737400000000000000000000000000604082015260600190565b6020808252601f908201527f7469636b4269746d6170456e64203c207469636b4269746d6170537461727400604082015260600190565b60208082526015908201527f6c6566744269746d6170416d6f756e74203c3d20300000000000000000000000604082015260600190565b60208082526016908201527f72696768744269746d6170416d6f756e74203c3d203000000000000000000000604082015260600190565b60006020825261164d6020830184516113aa565b60208301516040830152604083015161166960608401826113cb565b50606083015161167d6101408401826114c3565b5060808301516116916101608401826113c4565b5060a08301516116a56101808401826114c3565b5060c08301516116b96101a084018261143a565b5060e08301516102a0806102808501526116d76102c085018361128a565b91506101008501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe085840301828601526102be83826112fd565b61ffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461174357600080fd5b5056fea164736f6c6343000705000a"
}