{
  "address": "0x7160f736c52e1e78e92FD4eE4D73e21A7Cf4F950",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IUniswapV3Factory",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapStart",
          "type": "int16"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapEnd",
          "type": "int16"
        }
      ],
      "name": "getAdditionalBitmapWithTicks",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int16",
              "name": "index",
              "type": "int16"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "internalType": "struct IUniswapV3StateMulticall.TickBitMapMappings[]",
          "name": "tickBitmap",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "int24",
              "name": "index",
              "type": "int24"
            },
            {
              "components": [
                {
                  "internalType": "uint128",
                  "name": "liquidityGross",
                  "type": "uint128"
                },
                {
                  "internalType": "int128",
                  "name": "liquidityNet",
                  "type": "int128"
                },
                {
                  "internalType": "int56",
                  "name": "tickCumulativeOutside",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityOutsideX128",
                  "type": "uint160"
                },
                {
                  "internalType": "uint32",
                  "name": "secondsOutside",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                }
              ],
              "internalType": "struct IUniswapV3StateMulticall.TickInfo",
              "name": "value",
              "type": "tuple"
            }
          ],
          "internalType": "struct IUniswapV3StateMulticall.TickInfoMappings[]",
          "name": "ticks",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IUniswapV3Factory",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapStart",
          "type": "int16"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapEnd",
          "type": "int16"
        }
      ],
      "name": "getAdditionalBitmapWithoutTicks",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int16",
              "name": "index",
              "type": "int16"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "internalType": "struct IUniswapV3StateMulticall.TickBitMapMappings[]",
          "name": "tickBitmap",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IUniswapV3Factory",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapStart",
          "type": "int16"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapEnd",
          "type": "int16"
        }
      ],
      "name": "getFullState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IUniswapV3Pool",
              "name": "pool",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockTimestamp",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceX96",
                  "type": "uint160"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint16",
                  "name": "observationIndex",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "observationCardinality",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "observationCardinalityNext",
                  "type": "uint16"
                },
                {
                  "internalType": "uint8",
                  "name": "feeProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "unlocked",
                  "type": "bool"
                }
              ],
              "internalType": "struct IUniswapV3StateMulticall.Slot0",
              "name": "slot0",
              "type": "tuple"
            },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "uint128",
              "name": "maxLiquidityPerTick",
              "type": "uint128"
            },
            {
              "components": [
                {
                  "internalType": "uint32",
                  "name": "blockTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "int56",
                  "name": "tickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityCumulativeX128",
                  "type": "uint160"
                },
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                }
              ],
              "internalType": "struct IUniswapV3StateMulticall.Observation",
              "name": "observation",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "int16",
                  "name": "index",
                  "type": "int16"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IUniswapV3StateMulticall.TickBitMapMappings[]",
              "name": "tickBitmap",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "int24",
                  "name": "index",
                  "type": "int24"
                },
                {
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "liquidityGross",
                      "type": "uint128"
                    },
                    {
                      "internalType": "int128",
                      "name": "liquidityNet",
                      "type": "int128"
                    },
                    {
                      "internalType": "int56",
                      "name": "tickCumulativeOutside",
                      "type": "int56"
                    },
                    {
                      "internalType": "uint160",
                      "name": "secondsPerLiquidityOutsideX128",
                      "type": "uint160"
                    },
                    {
                      "internalType": "uint32",
                      "name": "secondsOutside",
                      "type": "uint32"
                    },
                    {
                      "internalType": "bool",
                      "name": "initialized",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IUniswapV3StateMulticall.TickInfo",
                  "name": "value",
                  "type": "tuple"
                }
              ],
              "internalType": "struct IUniswapV3StateMulticall.TickInfoMappings[]",
              "name": "ticks",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct IUniswapV3StateMulticall.StateResult",
          "name": "state",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IUniswapV3Factory",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        },
        {
          "internalType": "int16",
          "name": "leftBitmapAmount",
          "type": "int16"
        },
        {
          "internalType": "int16",
          "name": "rightBitmapAmount",
          "type": "int16"
        }
      ],
      "name": "getFullStateWithRelativeBitmaps",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IUniswapV3Pool",
              "name": "pool",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockTimestamp",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceX96",
                  "type": "uint160"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint16",
                  "name": "observationIndex",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "observationCardinality",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "observationCardinalityNext",
                  "type": "uint16"
                },
                {
                  "internalType": "uint8",
                  "name": "feeProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "unlocked",
                  "type": "bool"
                }
              ],
              "internalType": "struct IUniswapV3StateMulticall.Slot0",
              "name": "slot0",
              "type": "tuple"
            },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "uint128",
              "name": "maxLiquidityPerTick",
              "type": "uint128"
            },
            {
              "components": [
                {
                  "internalType": "uint32",
                  "name": "blockTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "int56",
                  "name": "tickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityCumulativeX128",
                  "type": "uint160"
                },
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                }
              ],
              "internalType": "struct IUniswapV3StateMulticall.Observation",
              "name": "observation",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "int16",
                  "name": "index",
                  "type": "int16"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IUniswapV3StateMulticall.TickBitMapMappings[]",
              "name": "tickBitmap",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "int24",
                  "name": "index",
                  "type": "int24"
                },
                {
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "liquidityGross",
                      "type": "uint128"
                    },
                    {
                      "internalType": "int128",
                      "name": "liquidityNet",
                      "type": "int128"
                    },
                    {
                      "internalType": "int56",
                      "name": "tickCumulativeOutside",
                      "type": "int56"
                    },
                    {
                      "internalType": "uint160",
                      "name": "secondsPerLiquidityOutsideX128",
                      "type": "uint160"
                    },
                    {
                      "internalType": "uint32",
                      "name": "secondsOutside",
                      "type": "uint32"
                    },
                    {
                      "internalType": "bool",
                      "name": "initialized",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IUniswapV3StateMulticall.TickInfo",
                  "name": "value",
                  "type": "tuple"
                }
              ],
              "internalType": "struct IUniswapV3StateMulticall.TickInfoMappings[]",
              "name": "ticks",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct IUniswapV3StateMulticall.StateResult",
          "name": "state",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IUniswapV3Factory",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapStart",
          "type": "int16"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapEnd",
          "type": "int16"
        }
      ],
      "name": "getFullStateWithoutTicks",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IUniswapV3Pool",
              "name": "pool",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockTimestamp",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceX96",
                  "type": "uint160"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint16",
                  "name": "observationIndex",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "observationCardinality",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "observationCardinalityNext",
                  "type": "uint16"
                },
                {
                  "internalType": "uint8",
                  "name": "feeProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "unlocked",
                  "type": "bool"
                }
              ],
              "internalType": "struct IUniswapV3StateMulticall.Slot0",
              "name": "slot0",
              "type": "tuple"
            },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "uint128",
              "name": "maxLiquidityPerTick",
              "type": "uint128"
            },
            {
              "components": [
                {
                  "internalType": "uint32",
                  "name": "blockTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "int56",
                  "name": "tickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityCumulativeX128",
                  "type": "uint160"
                },
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                }
              ],
              "internalType": "struct IUniswapV3StateMulticall.Observation",
              "name": "observation",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "int16",
                  "name": "index",
                  "type": "int16"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IUniswapV3StateMulticall.TickBitMapMappings[]",
              "name": "tickBitmap",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "int24",
                  "name": "index",
                  "type": "int24"
                },
                {
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "liquidityGross",
                      "type": "uint128"
                    },
                    {
                      "internalType": "int128",
                      "name": "liquidityNet",
                      "type": "int128"
                    },
                    {
                      "internalType": "int56",
                      "name": "tickCumulativeOutside",
                      "type": "int56"
                    },
                    {
                      "internalType": "uint160",
                      "name": "secondsPerLiquidityOutsideX128",
                      "type": "uint160"
                    },
                    {
                      "internalType": "uint32",
                      "name": "secondsOutside",
                      "type": "uint32"
                    },
                    {
                      "internalType": "bool",
                      "name": "initialized",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IUniswapV3StateMulticall.TickInfo",
                  "name": "value",
                  "type": "tuple"
                }
              ],
              "internalType": "struct IUniswapV3StateMulticall.TickInfoMappings[]",
              "name": "ticks",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct IUniswapV3StateMulticall.StateResult",
          "name": "state",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x8a10415df0e128588bc720bc29cf0255db2ef8998617d4c7d0cb11a83a306a01",
  "receipt": {
    "to": null,
    "from": "0x90dD83E62396D7385B1D70166Aafb8A9E528e813",
    "contractAddress": "0x7160f736c52e1e78e92FD4eE4D73e21A7Cf4F950",
    "transactionIndex": 1,
    "gasUsed": "1313365",
    "logsBloom": "0x
    "blockHash": "0xaa7dc26f4ba92b8bcde1e12cde524bbbe64c73fcba650691d002680161414026",
    "transactionHash": "0x8a10415df0e128588bc720bc29cf0255db2ef8998617d4c7d0cb11a83a306a01",
    "logs": [],
    "blockNumber": 3389258,
    "cumulativeGasUsed": "1360278",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "bytecode": "0x608060405234801561001057600080fd5b506116e2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806346c6c47e1161005057806346c6c47e146100b6578063db529c65146100c9578063ea086e4f146100e957610067565b806318a1c5851461006c5780631d5167f414610095575b600080fd5b61007f61007a366004610fea565b6100fc565b60405161008c91906115be565b60405180910390f35b6100a86100a3366004610fea565b61017e565b60405161008c929190611498565b61007f6100c4366004610fea565b6101eb565b6100dc6100d7366004610fea565b61024c565b60405161008c9190611485565b61007f6100f7366004610fea565b61029c565b610104610e14565b8260010b8260010b121561014d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014490611519565b60405180910390fd5b61015b878787878787610390565b905061016e878787878560e001516103c3565b6101008201529695505050505050565b6060808360010b8360010b12156101c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014490611519565b6101cf8888888888886106c5565b91506101de88888888866103c3565b9050965096945050505050565b6101f3610e14565b8260010b8260010b1215610233576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014490611519565b610241878787878787610390565b979650505050505050565b60608260010b8260010b121561028e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014490611519565b6102418787878787876106c5565b6102a4610e14565b60008360010b136102e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014490611550565b60008260010b1361031e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014490611587565b61032a87878787610915565b90506000610352826080015160020b83604001516020015160020b8161034c57fe5b05610d06565b9050610366888888888886038887016106c5565b8260e0018190525061037f888888888660e001516103c3565b610100830152509695505050505050565b610398610e14565b6103a487878787610915565b90506103b48787878787876106c5565b60e08201529695505050505050565b606060006103d387878787610d14565b90506000805b845181101561042f5760008582815181106103f057fe5b602002602001015160200151905060005b610100811015610425576001811b82161561041d576001909301925b600101610401565b50506001016103d9565b508067ffffffffffffffff8111801561044757600080fd5b5060405190808252806020026020018201604052801561048157816020015b61046e610e6a565b8152602001906001900390816104665790505b50925060008273ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104cc57600080fd5b505afa1580156104e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610504919061106c565b90506000805b86518110156106b757600087828151811061052157fe5b602002602001015160200151905060005b6101008110156106ad576001811b8216156106a5576000858260088c878151811061055957fe5b60200260200101516000015160010b60020b901b010290508089868151811061057e57fe5b60200260200101516000019060020b908160020b8152505061059e610e8c565b8986815181106105aa57fe5b60200260200101516020015190508873ffffffffffffffffffffffffffffffffffffffff1663f30dba93836040518263ffffffff1660e01b81526004016105f191906114d4565b6101006040518083038186803b15801561060a57600080fd5b505afa15801561061e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064291906110a0565b151560a089015263ffffffff16608088015273ffffffffffffffffffffffffffffffffffffffff166060870152600690810b900b60408601525050600f90810b900b60208301526fffffffffffffffffffffffffffffffff169052506001909301925b600101610532565b505060010161050a565b505050505095945050505050565b606060006106d588888888610d14565b90506000600185900b5b8460010b81136107ab576040517f5339c29600000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff851690635339c2969061073e9085906004016114c6565b60206040518083038186803b15801561075657600080fd5b505afa15801561076a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078e91906111c0565b90508061079b57506107a3565b506001909101905b6001016106df565b508067ffffffffffffffff811180156107c357600080fd5b506040519080825280602002602001820160405280156107fd57816020015b6107ea610ec1565b8152602001906001900390816107e25790505b5092506000600186900b5b8560010b8113610907576040517f5339c296000000000000000000000000000000000000000000000000000000008152819060009073ffffffffffffffffffffffffffffffffffffffff871690635339c296906108699085906004016114c6565b60206040518083038186803b15801561088157600080fd5b505afa158015610895573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b991906111c0565b9050806108c75750506108ff565b60405180604001604052808360010b8152602001828152508785815181106108eb57fe5b602090810291909101015250506001909101905b600101610808565b505050509695505050505050565b61091d610e14565b600061092b86868686610d14565b73ffffffffffffffffffffffffffffffffffffffff811680845242602080860191909152604080517f1a68650200000000000000000000000000000000000000000000000000000000815290519394509192631a686502926004808201939291829003018186803b15801561099f57600080fd5b505afa1580156109b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d79190611086565b6fffffffffffffffffffffffffffffffff166060830152604080517fd0c93a7c000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff83169163d0c93a7c916004808301926020929190829003018186803b158015610a5457600080fd5b505afa158015610a68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8c919061106c565b826080019060020b908160020b815250508073ffffffffffffffffffffffffffffffffffffffff166370cf754a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ae357600080fd5b505afa158015610af7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1b9190611086565b6fffffffffffffffffffffffffffffffff1660a0830152604080517f3850c7bd000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff831691633850c7bd9160048083019260e0929190829003018186803b158015610b9857600080fd5b505afa158015610bac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd09190611132565b6040808a01805192151560c084015260ff90931660a083015261ffff938416608083015293831660608201529390911683830152600293840b90930b602083015273ffffffffffffffffffffffffffffffffffffffff938416909152905181015190517f252c09d70000000000000000000000000000000000000000000000000000000081529183169163252c09d791610c6c916004016116a1565b60806040518083038186803b158015610c8457600080fd5b505afa158015610c98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbc91906111d8565b60c0860151901515606082015273ffffffffffffffffffffffffffffffffffffffff9091166040820152600691820b90910b602082015263ffffffff909116905250949350505050565b600281900b60081d5b919050565b6040517f1698ee8200000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff861690631698ee8290610d6d90879087908790600401611450565b60206040518083038186803b158015610d8557600080fd5b505afa158015610d99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbd9190610fc7565b905073ffffffffffffffffffffffffffffffffffffffff8116610e0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610144906114e2565b949350505050565b604080516101208101825260008082526020820152908101610e34610ed8565b8152600060208201819052604082018190526060820152608001610e56610f14565b815260200160608152602001606081525090565b6040518060400160405280600060020b8152602001610e87610e8c565b905290565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b604080518082019091526000808252602082015290565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b60408051608081018252600080825260208201819052918101829052606081019190915290565b80518015158114610d0f57600080fd5b8035600181900b8114610d0f57600080fd5b8051600281900b8114610d0f57600080fd5b8051600681900b8114610d0f57600080fd5b80516fffffffffffffffffffffffffffffffff81168114610d0f57600080fd5b805161ffff81168114610d0f57600080fd5b805163ffffffff81168114610d0f57600080fd5b600060208284031215610fd8578081fd5b8151610fe3816116b0565b9392505050565b60008060008060008060c08789031215611002578182fd5b863561100d816116b0565b9550602087013561101d816116b0565b9450604087013561102d816116b0565b9350606087013562ffffff81168114611044578283fd5b925061105260808801610f4b565b915061106060a08801610f4b565b90509295509295509295565b60006020828403121561107d578081fd5b610fe382610f5d565b600060208284031215611097578081fd5b610fe382610f81565b600080600080600080600080610100898b0312156110bc578182fd5b6110c589610f81565b9750602089015180600f0b81146110da578283fd5b60408a015160608b0151919850965094506110f760808a01610f6f565b935060a0890151611107816116b0565b925061111560c08a01610fb3565b915061112360e08a01610f3b565b90509295985092959890939650565b600080600080600080600060e0888a03121561114c578283fd5b8751611157816116b0565b965061116560208901610f5d565b955061117360408901610fa1565b945061118160608901610fa1565b935061118f60808901610fa1565b925060a088015160ff811681146111a4578283fd5b91506111b260c08901610f3b565b905092959891949750929550565b6000602082840312156111d1578081fd5b5051919050565b600080600080608085870312156111ed578182fd5b6111f685610fb3565b935061120460208601610f6f565b92506040850151611214816116b0565b915061122260608601610f3b565b905092959194509250565b805160010b82526020908101519082015260400190565b6000815180845260208085019450808401835b838110156112785761126a87835161122d565b965090820190600101611257565b509495945050505050565b6000815180845260208085019450808401835b83811015611278576112a987835161122d565b965090820190600101611296565b6000815180845260208085019450808401835b83811015611278578151805160020b885283015180516fffffffffffffffffffffffffffffffff168489015280840151600f0b6040808a019190915281015160060b6060808a019190915281015173ffffffffffffffffffffffffffffffffffffffff166080808a019190915281015163ffffffff1660a0808a01919091520151151560c088015260e090960195908201906001016112ca565b73ffffffffffffffffffffffffffffffffffffffff169052565b60020b9052565b63ffffffff8151168252602081015160060b602083015273ffffffffffffffffffffffffffffffffffffffff60408201511660408301526060810151151560608301525050565b73ffffffffffffffffffffffffffffffffffffffff8151168252602081015160020b6020830152604081015161ffff8082166040850152806060840151166060850152806080840151166080850152505060ff60a08201511660a083015260c0810151151560c08301525050565b6fffffffffffffffffffffffffffffffff169052565b73ffffffffffffffffffffffffffffffffffffffff938416815291909216602082015262ffffff909116604082015260600190565b600060208252610fe36020830184611283565b6000604082526114ab6040830185611283565b82810360208401526114bd81856112b7565b95945050505050565b60019190910b815260200190565b60029190910b815260200190565b60208082526013908201527f506f6f6c20646f6573206e6f7420657869737400000000000000000000000000604082015260600190565b6020808252601f908201527f7469636b4269746d6170456e64203c207469636b4269746d6170537461727400604082015260600190565b60208082526015908201527f6c6566744269746d6170416d6f756e74203c3d20300000000000000000000000604082015260600190565b60208082526016908201527f72696768744269746d6170416d6f756e74203c3d203000000000000000000000604082015260600190565b6000602082526115d2602083018451611364565b6020830151604083015260408301516115ee60608401826113cc565b50606083015161160261014084018261143a565b50608083015161161661016084018261137e565b5060a083015161162a61018084018261143a565b5060c083015161163e6101a0840182611385565b5060e08301516102408061022085015261165c610260850183611244565b91506101008501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403018286015261169783826112b7565b9695505050505050565b61ffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff811681146116d257600080fd5b5056fea164736f6c6343000705000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c806346c6c47e1161005057806346c6c47e146100b6578063db529c65146100c9578063ea086e4f146100e957610067565b806318a1c5851461006c5780631d5167f414610095575b600080fd5b61007f61007a366004610fea565b6100fc565b60405161008c91906115be565b60405180910390f35b6100a86100a3366004610fea565b61017e565b60405161008c929190611498565b61007f6100c4366004610fea565b6101eb565b6100dc6100d7366004610fea565b61024c565b60405161008c9190611485565b61007f6100f7366004610fea565b61029c565b610104610e14565b8260010b8260010b121561014d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014490611519565b60405180910390fd5b61015b878787878787610390565b905061016e878787878560e001516103c3565b6101008201529695505050505050565b6060808360010b8360010b12156101c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014490611519565b6101cf8888888888886106c5565b91506101de88888888866103c3565b9050965096945050505050565b6101f3610e14565b8260010b8260010b1215610233576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014490611519565b610241878787878787610390565b979650505050505050565b60608260010b8260010b121561028e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014490611519565b6102418787878787876106c5565b6102a4610e14565b60008360010b136102e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014490611550565b60008260010b1361031e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014490611587565b61032a87878787610915565b90506000610352826080015160020b83604001516020015160020b8161034c57fe5b05610d06565b9050610366888888888886038887016106c5565b8260e0018190525061037f888888888660e001516103c3565b610100830152509695505050505050565b610398610e14565b6103a487878787610915565b90506103b48787878787876106c5565b60e08201529695505050505050565b606060006103d387878787610d14565b90506000805b845181101561042f5760008582815181106103f057fe5b602002602001015160200151905060005b610100811015610425576001811b82161561041d576001909301925b600101610401565b50506001016103d9565b508067ffffffffffffffff8111801561044757600080fd5b5060405190808252806020026020018201604052801561048157816020015b61046e610e6a565b8152602001906001900390816104665790505b50925060008273ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104cc57600080fd5b505afa1580156104e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610504919061106c565b90506000805b86518110156106b757600087828151811061052157fe5b602002602001015160200151905060005b6101008110156106ad576001811b8216156106a5576000858260088c878151811061055957fe5b60200260200101516000015160010b60020b901b010290508089868151811061057e57fe5b60200260200101516000019060020b908160020b8152505061059e610e8c565b8986815181106105aa57fe5b60200260200101516020015190508873ffffffffffffffffffffffffffffffffffffffff1663f30dba93836040518263ffffffff1660e01b81526004016105f191906114d4565b6101006040518083038186803b15801561060a57600080fd5b505afa15801561061e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064291906110a0565b151560a089015263ffffffff16608088015273ffffffffffffffffffffffffffffffffffffffff166060870152600690810b900b60408601525050600f90810b900b60208301526fffffffffffffffffffffffffffffffff169052506001909301925b600101610532565b505060010161050a565b505050505095945050505050565b606060006106d588888888610d14565b90506000600185900b5b8460010b81136107ab576040517f5339c29600000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff851690635339c2969061073e9085906004016114c6565b60206040518083038186803b15801561075657600080fd5b505afa15801561076a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078e91906111c0565b90508061079b57506107a3565b506001909101905b6001016106df565b508067ffffffffffffffff811180156107c357600080fd5b506040519080825280602002602001820160405280156107fd57816020015b6107ea610ec1565b8152602001906001900390816107e25790505b5092506000600186900b5b8560010b8113610907576040517f5339c296000000000000000000000000000000000000000000000000000000008152819060009073ffffffffffffffffffffffffffffffffffffffff871690635339c296906108699085906004016114c6565b60206040518083038186803b15801561088157600080fd5b505afa158015610895573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b991906111c0565b9050806108c75750506108ff565b60405180604001604052808360010b8152602001828152508785815181106108eb57fe5b602090810291909101015250506001909101905b600101610808565b505050509695505050505050565b61091d610e14565b600061092b86868686610d14565b73ffffffffffffffffffffffffffffffffffffffff811680845242602080860191909152604080517f1a68650200000000000000000000000000000000000000000000000000000000815290519394509192631a686502926004808201939291829003018186803b15801561099f57600080fd5b505afa1580156109b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d79190611086565b6fffffffffffffffffffffffffffffffff166060830152604080517fd0c93a7c000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff83169163d0c93a7c916004808301926020929190829003018186803b158015610a5457600080fd5b505afa158015610a68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8c919061106c565b826080019060020b908160020b815250508073ffffffffffffffffffffffffffffffffffffffff166370cf754a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ae357600080fd5b505afa158015610af7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1b9190611086565b6fffffffffffffffffffffffffffffffff1660a0830152604080517f3850c7bd000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff831691633850c7bd9160048083019260e0929190829003018186803b158015610b9857600080fd5b505afa158015610bac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd09190611132565b6040808a01805192151560c084015260ff90931660a083015261ffff938416608083015293831660608201529390911683830152600293840b90930b602083015273ffffffffffffffffffffffffffffffffffffffff938416909152905181015190517f252c09d70000000000000000000000000000000000000000000000000000000081529183169163252c09d791610c6c916004016116a1565b60806040518083038186803b158015610c8457600080fd5b505afa158015610c98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbc91906111d8565b60c0860151901515606082015273ffffffffffffffffffffffffffffffffffffffff9091166040820152600691820b90910b602082015263ffffffff909116905250949350505050565b600281900b60081d5b919050565b6040517f1698ee8200000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff861690631698ee8290610d6d90879087908790600401611450565b60206040518083038186803b158015610d8557600080fd5b505afa158015610d99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbd9190610fc7565b905073ffffffffffffffffffffffffffffffffffffffff8116610e0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610144906114e2565b949350505050565b604080516101208101825260008082526020820152908101610e34610ed8565b8152600060208201819052604082018190526060820152608001610e56610f14565b815260200160608152602001606081525090565b6040518060400160405280600060020b8152602001610e87610e8c565b905290565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b604080518082019091526000808252602082015290565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b60408051608081018252600080825260208201819052918101829052606081019190915290565b80518015158114610d0f57600080fd5b8035600181900b8114610d0f57600080fd5b8051600281900b8114610d0f57600080fd5b8051600681900b8114610d0f57600080fd5b80516fffffffffffffffffffffffffffffffff81168114610d0f57600080fd5b805161ffff81168114610d0f57600080fd5b805163ffffffff81168114610d0f57600080fd5b600060208284031215610fd8578081fd5b8151610fe3816116b0565b9392505050565b60008060008060008060c08789031215611002578182fd5b863561100d816116b0565b9550602087013561101d816116b0565b9450604087013561102d816116b0565b9350606087013562ffffff81168114611044578283fd5b925061105260808801610f4b565b915061106060a08801610f4b565b90509295509295509295565b60006020828403121561107d578081fd5b610fe382610f5d565b600060208284031215611097578081fd5b610fe382610f81565b600080600080600080600080610100898b0312156110bc578182fd5b6110c589610f81565b9750602089015180600f0b81146110da578283fd5b60408a015160608b0151919850965094506110f760808a01610f6f565b935060a0890151611107816116b0565b925061111560c08a01610fb3565b915061112360e08a01610f3b565b90509295985092959890939650565b600080600080600080600060e0888a03121561114c578283fd5b8751611157816116b0565b965061116560208901610f5d565b955061117360408901610fa1565b945061118160608901610fa1565b935061118f60808901610fa1565b925060a088015160ff811681146111a4578283fd5b91506111b260c08901610f3b565b905092959891949750929550565b6000602082840312156111d1578081fd5b5051919050565b600080600080608085870312156111ed578182fd5b6111f685610fb3565b935061120460208601610f6f565b92506040850151611214816116b0565b915061122260608601610f3b565b905092959194509250565b805160010b82526020908101519082015260400190565b6000815180845260208085019450808401835b838110156112785761126a87835161122d565b965090820190600101611257565b509495945050505050565b6000815180845260208085019450808401835b83811015611278576112a987835161122d565b965090820190600101611296565b6000815180845260208085019450808401835b83811015611278578151805160020b885283015180516fffffffffffffffffffffffffffffffff168489015280840151600f0b6040808a019190915281015160060b6060808a019190915281015173ffffffffffffffffffffffffffffffffffffffff166080808a019190915281015163ffffffff1660a0808a01919091520151151560c088015260e090960195908201906001016112ca565b73ffffffffffffffffffffffffffffffffffffffff169052565b60020b9052565b63ffffffff8151168252602081015160060b602083015273ffffffffffffffffffffffffffffffffffffffff60408201511660408301526060810151151560608301525050565b73ffffffffffffffffffffffffffffffffffffffff8151168252602081015160020b6020830152604081015161ffff8082166040850152806060840151166060850152806080840151166080850152505060ff60a08201511660a083015260c0810151151560c08301525050565b6fffffffffffffffffffffffffffffffff169052565b73ffffffffffffffffffffffffffffffffffffffff938416815291909216602082015262ffffff909116604082015260600190565b600060208252610fe36020830184611283565b6000604082526114ab6040830185611283565b82810360208401526114bd81856112b7565b95945050505050565b60019190910b815260200190565b60029190910b815260200190565b60208082526013908201527f506f6f6c20646f6573206e6f7420657869737400000000000000000000000000604082015260600190565b6020808252601f908201527f7469636b4269746d6170456e64203c207469636b4269746d6170537461727400604082015260600190565b60208082526015908201527f6c6566744269746d6170416d6f756e74203c3d20300000000000000000000000604082015260600190565b60208082526016908201527f72696768744269746d6170416d6f756e74203c3d203000000000000000000000604082015260600190565b6000602082526115d2602083018451611364565b6020830151604083015260408301516115ee60608401826113cc565b50606083015161160261014084018261143a565b50608083015161161661016084018261137e565b5060a083015161162a61018084018261143a565b5060c083015161163e6101a0840182611385565b5060e08301516102408061022085015261165c610260850183611244565b91506101008501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403018286015261169783826112b7565b9695505050505050565b61ffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff811681146116d257600080fd5b5056fea164736f6c6343000705000a"
}
